<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>故事一</title>
      <link href="2020/12/19/%E6%95%85%E4%BA%8B%E4%B8%80/"/>
      <url>2020/12/19/%E6%95%85%E4%BA%8B%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<p>学习东西要以本质为导向，效率更高。个人成长的本质就是个人价值积累，从价值现状到价值目标的过程（概念就是本质，当句子中出现“就是”时，就是定义，定义是不冗余的关键词的有机组合）<br>为什么价值一词这么重要？成长为什么一定要关注价值呢？马克思哲学中定义：人是一切社会关系的总和<br>成为一个更好的人，就是将社会关系变得更好<br>更好的社会关系来自于交换<br>交换的标的物是价值，任何事物背后都有价值，价值的外显有金钱、人脉、情感等<br>因此拥有更好的价值就有助于实现更好的交换，带来更好的关系，让自己成为更好的人。站在价值的本质来思考成长，成长速度是翻倍的自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.</p><p>存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.</p><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/Japan/2.jpg" alt="post-cover"></p>]]></content>
      
      
      <categories>
          
          <category> log </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>故事二</title>
      <link href="2020/12/19/%E6%95%85%E4%BA%8B%E4%BA%8C/"/>
      <url>2020/12/19/%E6%95%85%E4%BA%8B%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<p>学习东西要以本质为导向，效率更高。个人成长的本质就是个人价值积累，从价值现状到价值目标的过程（概念就是本质，当句子中出现“就是”时，就是定义，定义是不冗余的关键词的有机组合）<br>为什么价值一词这么重要？成长为什么一定要关注价值呢？马克思哲学中定义：人是一切社会关系的总和<br>成为一个更好的人，就是将社会关系变得更好<br>更好的社会关系来自于交换<br>交换的标的物是价值，任何事物背后都有价值，价值的外显有金钱、人脉、情感等<br>因此拥有更好的价值就有助于实现更好的交换，带来更好的关系，让自己成为更好的人。站在价值的本质来思考成长，成长速度是翻倍的自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.</p><p>存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.</p><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/Japan/2.jpg" alt="post-cover"></p>]]></content>
      
      
      <categories>
          
          <category> log </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>相册</title>
      <link href="2020/12/19/%E7%9B%B8%E5%86%8C/"/>
      <url>2020/12/19/%E7%9B%B8%E5%86%8C/</url>
      
        <content type="html"><![CDATA[<p>学习东西要以本质为导向，效率更高。个人成长的本质就是个人价值积累，从价值现状到价值目标的过程（概念就是本质，当句子中出现“就是”时，就是定义，定义是不冗余的关键词的有机组合）<br>为什么价值一词这么重要？成长为什么一定要关注价值呢？马克思哲学中定义：人是一切社会关系的总和<br>成为一个更好的人，就是将社会关系变得更好<br>更好的社会关系来自于交换<br>交换的标的物是价值，任何事物背后都有价值，价值的外显有金钱、人脉、情感等<br>因此拥有更好的价值就有助于实现更好的交换，带来更好的关系，让自己成为更好的人。站在价值的本质来思考成长，成长速度是翻倍的自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.自我意识是指一个人的欲望和情感的强烈意识. 这需要勇气和理解成为自我意识和庆祝你是谁. 自我意识，不仅适用于个人成长独奏水平，而且可以加强你的人际关系.</p><p>存在于瞬间, 了解你想要什么，需要, 并与你的身体的内部语言调是在达到自我意识的所有关键步骤. 在这篇文章中, 我们会更仔细的人都追求自我意识的原因，以及它如何帮助您和您的关系.</p><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/Japan/2.jpg" alt="post-cover"></p>]]></content>
      
      
      <categories>
          
          <category> log </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTTP状态码详解</title>
      <link href="2020/12/19/HTTP%E7%8A%B6%E6%80%81%E7%A0%81%E8%AF%A6%E8%A7%A3/"/>
      <url>2020/12/19/HTTP%E7%8A%B6%E6%80%81%E7%A0%81%E8%AF%A6%E8%A7%A3/</url>
      
        <content type="html"><![CDATA[<h4 id="我们在访问一个网页时-浏览器会返回一个HTTP状态码-它代表这次访问的情况。之前开发项目做测试时-返回的一些状态码老是想不起来是什么-我做了个笔记-闲暇时可以记忆一下"><a href="#我们在访问一个网页时-浏览器会返回一个HTTP状态码-它代表这次访问的情况。之前开发项目做测试时-返回的一些状态码老是想不起来是什么-我做了个笔记-闲暇时可以记忆一下" class="headerlink" title="我们在访问一个网页时,浏览器会返回一个HTTP状态码,它代表这次访问的情况。之前开发项目做测试时,返回的一些状态码老是想不起来是什么,我做了个笔记,闲暇时可以记忆一下"></a>我们在访问一个网页时,浏览器会返回一个HTTP状态码,它代表这次访问的情况。之前开发项目做测试时,返回的一些状态码老是想不起来是什么,我做了个笔记,闲暇时可以记忆一下</h4><br/><table><thead><tr><th align="center">状态码</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">100</td><td align="center">客户端应当继续发送请求。这个临时响应是用来通知客户端它的部分请求已经被服务器接收，且仍未被拒绝。客户端应当继续发送请求的剩余部分，或者如果请求已经完成，忽略这个响应。服务器必须在请求完成后向客户端发送一个最终响应。</td></tr><tr><td align="center">101</td><td align="center">服务器已经理解了客户端的请求，并将通过Upgrade 消息头通知客户端采用不同的协议来完成这个请求。在发送完这个响应最后的空行后，服务器将会切换到在Upgrade 消息头中定义的那些协议。 　　只有在切换新的协议更有好处的时候才应该采取类似措施。例如，切换到新的HTTP 版本比旧版本更有优势，或者切换到一个实时且同步的协议以传送利用此类特性的资源。</td></tr><tr><td align="center">102</td><td align="center">由WebDAV（RFC 2518）扩展的状态码，代表处理将被继续执行。</td></tr><tr><td align="center">200</td><td align="center">请求已成功，请求所希望的响应头或数据体将随此响应返回。</td></tr><tr><td align="center">201</td><td align="center">请求已经被实现，而且有一个新的资源已经依据请求的需要而建立，且其 URI 已经随Location 头信息返回。假如需要的资源无法及时建立的话，应当返回 ‘202 Accepted’。</td></tr><tr><td align="center">202</td><td align="center">服务器已接受请求，但尚未处理。正如它可能被拒绝一样，最终该请求可能会也可能不会被执行。在异步操作的场合下，没有比发送这个状态码更方便的做法了。 　　返回202状态码的响应的目的是允许服务器接受其他过程的请求（例如某个每天只执行一次的基于批处理的操作），而不必让客户端一直保持与服务器的连接直到批处理操作全部完成。在接受请求处理并返回202状态码的响应应当在返回的实体中包含一些指示处理当前状态的信息，以及指向处理状态监视器或状态预测的指针，以便用户能够估计操作是否已经完成。</td></tr><tr><td align="center">203</td><td align="center">服务器已成功处理了请求，但返回的实体头部元信息不是在原始服务器上有效的确定集合，而是来自本地或者第三方的拷贝。当前的信息可能是原始版本的子集或者超集。例如，包含资源的元数据可能导致原始服务器知道元信息的超级。使用此状态码不是必须的，而且只有在响应不使用此状态码便会返回200 OK的情况下才是合适的。</td></tr><tr><td align="center">204</td><td align="center">服务器成功处理了请求，但不需要返回任何实体内容，并且希望返回更新了的元信息。响应可能通过实体头部的形式，返回新的或更新后的元信息。如果存在这些头部信息，则应当与所请求的变量相呼应。 　　如果客户端是浏览器的话，那么用户浏览器应保留发送了该请求的页面，而不产生任何文档视图上的变化，即使按照规范新的或更新后的元信息应当被应用到用户浏览器活动视图中的文档。 　　由于204响应被禁止包含任何消息体，因此它始终以消息头后的第一个空行结尾。</td></tr><tr><td align="center">205</td><td align="center">服务器成功处理了请求，且没有返回任何内容。但是与204响应不同，返回此状态码的响应要求请求者重置文档视图。该响应主要是被用于接受用户输入后，立即重置表单，以便用户能够轻松地开始另一次输入。 　　与204响应一样，该响应也被禁止包含任何消息体，且以消息头后的第一个空行结束。</td></tr><tr><td align="center">206</td><td align="center">服务器已经成功处理了部分 GET 请求。类似于 FlashGet 或者迅雷这类的 HTTP 下载工具都是使用此类响应实现断点续传或者将一个大文档分解为多个下载段同时下载。 　　该请求必须包含 Range 头信息来指示客户端希望得到的内容范围，并且可能包含 If-Range 来作为请求条件。 　　响应必须包含如下的头部域： 　　Content-Range 用以指示本次响应中返回的内容的范围；如果是 Content-Type 为 multipart/byteranges 的多段下载，则每一 multipart 段中都应包含 Content-Range 域用以指示本段的内容范围。假如响应中包含 Content-Length，那么它的数值必须匹配它返回的内容范围的真实字节数。 　　Date 　　ETag 和/或 Content-Location，假如同样的请求本应该返回200响应。 　　Expires, Cache-Control，和/或 Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。 　　假如本响应请求使用了 If-Range 强缓存验证，那么本次响应不应该包含其他实体头；假如本响应的请求使用了 If-Range 弱缓存验证，那么本次响应禁止包含其他实体头；这避免了缓存的实体内容和更新了的实体头信息之间的不一致。否则，本响应就应当包含所有本应该返回200响应中应当返回的所有实体头部域。 　　假如 ETag 或 Last-Modified 头部不能精确匹配的话，则客户端缓存应禁止将206响应返回的内容与之前任何缓存过的内容组合在一起。 　　任何不支持 Range 以及 Content-Range 头的缓存都禁止缓存206响应返回的内容。</td></tr><tr><td align="center">207</td><td align="center">由WebDAV(RFC 2518)扩展的状态码，代表之后的消息体将是一个XML消息，并且可能依照之前子请求数量的不同，包含一系列独立的响应代码。</td></tr><tr><td align="center">300</td><td align="center">被请求的资源有一系列可供选择的回馈信息，每个都有自己特定的地址和浏览器驱动的商议信息。用户或浏览器能够自行选择一个首选的地址进行重定向。 　　除非这是一个 HEAD 请求，否则该响应应当包括一个资源特性及地址的列表的实体，以便用户或浏览器从中选择最合适的重定向地址。这个实体的格式由 Content-Type 定义的格式所决定。浏览器可能根据响应的格式以及浏览器自身能力，自动作出最合适的选择。当然，RFC 2616规范并没有规定这样的自动选择该如何进行。 　　如果服务器本身已经有了首选的回馈选择，那么在 Location 中应当指明这个回馈的 URI；浏览器可能会将这个 Location 值作为自动重定向的地址。此外，除非额外指定，否则这个响应也是可缓存的。</td></tr><tr><td align="center">301</td><td align="center">被请求的资源已永久移动到新位置，并且将来任何对此资源的引用都应该使用本响应返回的若干个 URI 之一。如果可能，拥有链接编辑功能的客户端应当自动把请求的地址修改为从服务器反馈回来的地址。除非额外指定，否则这个响应也是可缓存的。 　　新的永久性的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 　　如果这不是一个 GET 或者 HEAD 请求，因此浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。 　　注意：对于某些使用 HTTP/1.0 协议的浏览器，当它们发送的 POST 请求得到了一个301响应的话，接下来的重定向请求将会变成 GET 方式。</td></tr><tr><td align="center">302</td><td align="center">请求的资源现在临时从不同的 URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。 　　新的临时性的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 　　如果这不是一个 GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。 　　注意：虽然RFC 1945和RFC 2068规范不允许客户端在重定向时改变请求的方法，但是很多现存的浏览器将302响应视作为303响应，并且使用 GET 方式访问在 Location 中规定的 URI，而无视原先请求的方法。状态码303和307被添加了进来，用以明确服务器期待客户端进行何种反应。</td></tr><tr><td align="center">303</td><td align="center">对应当前请求的响应可以在另一个 URI 上被找到，而且客户端应当采用 GET 的方式访问那个资源。这个方法的存在主要是为了允许由脚本激活的POST请求输出重定向到一个新的资源。这个新的 URI 不是原始资源的替代引用。同时，303响应禁止被缓存。当然，第二个请求（重定向）可能被缓存。 　　新的 URI 应当在响应的 Location 域中返回。除非这是一个 HEAD 请求，否则响应的实体中应当包含指向新的 URI 的超链接及简短说明。 　　注意：许多 HTTP/1.1 版以前的 浏览器不能正确理解303状态。如果需要考虑与这些浏览器之间的互动，302状态码应该可以胜任，因为大多数的浏览器处理302响应时的方式恰恰就是上述规范要求客户端处理303响应时应当做的。</td></tr><tr><td align="center">304</td><td align="center">如果客户端发送了一个带条件的 GET 请求且该请求已被允许，而文档的内容（自上次访问以来或者根据请求的条件）并没有改变，则服务器应当返回这个状态码。304响应禁止包含消息体，因此始终以消息头后的第一个空行结尾。 　　该响应必须包含以下的头信息： 　　Date，除非这个服务器没有时钟。假如没有时钟的服务器也遵守这些规则，那么代理服务器以及客户端可以自行将 Date 字段添加到接收到的响应头中去（正如RFC 2068中规定的一样），缓存机制将会正常工作。 　　ETag 和/或 Content-Location，假如同样的请求本应返回200响应。 　　Expires, Cache-Control，和/或Vary，假如其值可能与之前相同变量的其他响应对应的值不同的话。 　　假如本响应请求使用了强缓存验证，那么本次响应不应该包含其他实体头；否则（例如，某个带条件的 GET 请求使用了弱缓存验证），本次响应禁止包含其他实体头；这避免了缓存了的实体内容和更新了的实体头信息之间的不一致。 　　假如某个304响应指明了当前某个实体没有缓存，那么缓存系统必须忽视这个响应，并且重复发送不包含限制条件的请求。 　　假如接收到一个要求更新某个缓存条目的304响应，那么缓存系统必须更新整个条目以反映所有在响应中被更新的字段的值。</td></tr><tr><td align="center">305</td><td align="center">被请求的资源必须通过指定的代理才能被访问。Location 域中将给出指定的代理所在的 URI 信息，接收者需要重复发送一个单独的请求，通过这个代理才能访问相应资源。只有原始服务器才能建立305响应。 　　注意：RFC 2068中没有明确305响应是为了重定向一个单独的请求，而且只能被原始服务器建立。忽视这些限制可能导致严重的安全后果。</td></tr><tr><td align="center">306</td><td align="center">在最新版的规范中，306状态码已经不再被使用。</td></tr><tr><td align="center">307</td><td align="center">请求的资源现在临时从不同的URI 响应请求。由于这样的重定向是临时的，客户端应当继续向原有地址发送以后的请求。只有在Cache-Control或Expires中进行了指定的情况下，这个响应才是可缓存的。 　　新的临时性的URI 应当在响应的 Location 域中返回。除非这是一个HEAD 请求，否则响应的实体中应当包含指向新的URI 的超链接及简短说明。因为部分浏览器不能识别307响应，因此需要添加上述必要信息以便用户能够理解并向新的 URI 发出访问请求。 　　如果这不是一个GET 或者 HEAD 请求，那么浏览器禁止自动进行重定向，除非得到用户的确认，因为请求的条件可能因此发生变化。</td></tr><tr><td align="center">400</td><td align="center">1、语义有误，当前请求无法被服务器理解。除非进行修改，否则客户端不应该重复提交这个请求。 　　2、请求参数有误。</td></tr><tr><td align="center">401</td><td align="center">当前请求需要用户验证。该响应必须包含一个适用于被请求资源的 WWW-Authenticate 信息头用以询问用户信息。客户端可以重复提交一个包含恰当的 Authorization 头信息的请求。如果当前请求已经包含了 Authorization 证书，那么401响应代表着服务器验证已经拒绝了那些证书。如果401响应包含了与前一个响应相同的身份验证询问，且浏览器已经至少尝试了一次验证，那么浏览器应当向用户展示响应中包含的实体信息，因为这个实体信息中可能包含了相关诊断信息。参见RFC 2617。</td></tr><tr><td align="center">402</td><td align="center">该状态码是为了将来可能的需求而预留的。</td></tr><tr><td align="center">403</td><td align="center">服务器已经理解请求，但是拒绝执行它。与401响应不同的是，身份验证并不能提供任何帮助，而且这个请求也不应该被重复提交。如果这不是一个 HEAD 请求，而且服务器希望能够讲清楚为何请求不能被执行，那么就应该在实体内描述拒绝的原因。当然服务器也可以返回一个404响应，假如它不希望让客户端获得任何信息。</td></tr><tr><td align="center">404</td><td align="center">请求失败，请求所希望得到的资源未被在服务器上发现。没有信息能够告诉用户这个状况到底是暂时的还是永久的。假如服务器知道情况的话，应当使用410状态码来告知旧资源因为某些内部的配置机制问题，已经永久的不可用，而且没有任何可以跳转的地址。404这个状态码被广泛应用于当服务器不想揭示到底为何请求被拒绝或者没有其他适合的响应可用的情况下。</td></tr><tr><td align="center">405</td><td align="center">请求行中指定的请求方法不能被用于请求相应的资源。该响应必须返回一个Allow 头信息用以表示出当前资源能够接受的请求方法的列表。 　　鉴于 PUT，DELETE 方法会对服务器上的资源进行写操作，因而绝大部分的网页服务器都不支持或者在默认配置下不允许上述请求方法，对于此类请求均会返回405错误。</td></tr><tr><td align="center">406</td><td align="center">请求的资源的内容特性无法满足请求头中的条件，因而无法生成响应实体。 　　除非这是一个 HEAD 请求，否则该响应就应当返回一个包含可以让用户或者浏览器从中选择最合适的实体特性以及地址列表的实体。实体的格式由 Content-Type 头中定义的媒体类型决定。浏览器可以根据格式及自身能力自行作出最佳选择。但是，规范中并没有定义任何作出此类自动选择的标准。</td></tr><tr><td align="center">407</td><td align="center">与401响应类似，只不过客户端必须在代理服务器上进行身份验证。代理服务器必须返回一个 Proxy-Authenticate 用以进行身份询问。客户端可以返回一个 Proxy-Authorization 信息头用以验证。参见RFC 2617。</td></tr><tr><td align="center">408</td><td align="center">请求超时。客户端没有在服务器预备等待的时间内完成一个请求的发送。客户端可以随时再次提交这一请求而无需进行任何更改。</td></tr><tr><td align="center">409</td><td align="center">由于和被请求的资源的当前状态之间存在冲突，请求无法完成。这个代码只允许用在这样的情况下才能被使用：用户被认为能够解决冲突，并且会重新提交新的请求。该响应应当包含足够的信息以便用户发现冲突的源头。 　　冲突通常发生于对 PUT 请求的处理中。例如，在采用版本检查的环境下，某次 PUT 提交的对特定资源的修改请求所附带的版本信息与之前的某个（第三方）请求向冲突，那么此时服务器就应该返回一个409错误，告知用户请求无法完成。此时，响应实体中很可能会包含两个冲突版本之间的差异比较，以便用户重新提交归并以后的新版本。</td></tr><tr><td align="center">410</td><td align="center">被请求的资源在服务器上已经不再可用，而且没有任何已知的转发地址。这样的状况应当被认为是永久性的。如果可能，拥有链接编辑功能的客户端应当在获得用户许可后删除所有指向这个地址的引用。如果服务器不知道或者无法确定这个状况是否是永久的，那么就应该使用404状态码。除非额外说明，否则这个响应是可缓存的。 　　410响应的目的主要是帮助网站管理员维护网站，通知用户该资源已经不再可用，并且服务器拥有者希望所有指向这个资源的远端连接也被删除。这类事件在限时、增值服务中很普遍。同样，410响应也被用于通知客户端在当前服务器站点上，原本属于某个个人的资源已经不再可用。当然，是否需要把所有永久不可用的资源标记为’410 Gone’，以及是否需要保持此标记多长时间，完全取决于服务器拥有者。</td></tr><tr><td align="center">411</td><td align="center">服务器拒绝在没有定义 Content-Length 头的情况下接受请求。在添加了表明请求消息体长度的有效 Content-Length 头之后，客户端可以再次提交该请求。</td></tr><tr><td align="center">412</td><td align="center">服务器在验证在请求的头字段中给出先决条件时，没能满足其中的一个或多个。这个状态码允许客户端在获取资源时在请求的元信息（请求头字段数据）中设置先决条件，以此避免该请求方法被应用到其希望的内容以外的资源上。</td></tr><tr><td align="center">413</td><td align="center">服务器拒绝处理当前请求，因为该请求提交的实体数据大小超过了服务器愿意或者能够处理的范围。此种情况下，服务器可以关闭连接以免客户端继续发送此请求。 　　如果这个状况是临时的，服务器应当返回一个 Retry-After 的响应头，以告知客户端可以在多少时间以后重新尝试。</td></tr><tr><td align="center">414</td><td align="center">请求的URI 长度超过了服务器能够解释的长度，因此服务器拒绝对该请求提供服务。这比较少见，通常的情况包括： 　　本应使用POST方法的表单提交变成了GET方法，导致查询字符串（Query String）过长。 　　重定向URI “黑洞”，例如每次重定向把旧的 URI 作为新的 URI 的一部分，导致在若干次重定向后 URI 超长。 　　客户端正在尝试利用某些服务器中存在的安全漏洞攻击服务器。这类服务器使用固定长度的缓冲读取或操作请求的 URI，当 GET 后的参数超过某个数值后，可能会产生缓冲区溢出，导致任意代码被执行[1]。没有此类漏洞的服务器，应当返回414状态码。</td></tr><tr><td align="center">415</td><td align="center">对于当前请求的方法和所请求的资源，请求中提交的实体并不是服务器中所支持的格式，因此请求被拒绝。</td></tr><tr><td align="center">416</td><td align="center">如果请求中包含了 Range 请求头，并且 Range 中指定的任何数据范围都与当前资源的可用范围不重合，同时请求中又没有定义 If-Range 请求头，那么服务器就应当返回416状态码。 　　假如 Range 使用的是字节范围，那么这种情况就是指请求指定的所有数据范围的首字节位置都超过了当前资源的长度。服务器也应当在返回416状态码的同时，包含一个 Content-Range 实体头，用以指明当前资源的长度。这个响应也被禁止使用 multipart/byteranges 作为其 Content-Type。</td></tr><tr><td align="center">417</td><td align="center">在请求头 Expect 中指定的预期内容无法被服务器满足，或者这个服务器是一个代理服务器，它有明显的证据证明在当前路由的下一个节点上，Expect 的内容无法被满足。</td></tr><tr><td align="center">421</td><td align="center">从当前客户端所在的IP地址到服务器的连接数超过了服务器许可的最大范围。通常，这里的IP地址指的是从服务器上看到的客户端地址（比如用户的网关或者代理服务器地址）。在这种情况下，连接数的计算可能涉及到不止一个终端用户。</td></tr><tr><td align="center">422</td><td align="center">从当前客户端所在的IP地址到服务器的连接数超过了服务器许可的最大范围。通常，这里的IP地址指的是从服务器上看到的客户端地址（比如用户的网关或者代理服务器地址）。在这种情况下，连接数的计算可能涉及到不止一个终端用户。</td></tr><tr><td align="center">422</td><td align="center">请求格式正确，但是由于含有语义错误，无法响应。（RFC 4918 WebDAV）423 Locked 　　当前资源被锁定。（RFC 4918 WebDAV）</td></tr><tr><td align="center">424</td><td align="center">由于之前的某个请求发生的错误，导致当前请求失败，例如 PROPPATCH。（RFC 4918 WebDAV）</td></tr><tr><td align="center">425</td><td align="center">在WebDav Advanced Collections 草案中定义，但是未出现在《WebDAV 顺序集协议》（RFC 3658）中。</td></tr><tr><td align="center">426</td><td align="center">客户端应当切换到TLS/1.0。（RFC 2817）</td></tr><tr><td align="center">449</td><td align="center">由微软扩展，代表请求应当在执行完适当的操作后进行重试。</td></tr><tr><td align="center">500</td><td align="center">服务器遇到了一个未曾预料的状况，导致了它无法完成对请求的处理。一般来说，这个问题都会在服务器的程序码出错时出现。</td></tr><tr><td align="center">501</td><td align="center">服务器不支持当前请求所需要的某个功能。当服务器无法识别请求的方法，并且无法支持其对任何资源的请求。</td></tr><tr><td align="center">502</td><td align="center">作为网关或者代理工作的服务器尝试执行请求时，从上游服务器接收到无效的响应。</td></tr><tr><td align="center">503</td><td align="center">由于临时的服务器维护或者过载，服务器当前无法处理请求。这个状况是临时的，并且将在一段时间以后恢复。如果能够预计延迟时间，那么响应中可以包含一个 Retry-After 头用以标明这个延迟时间。如果没有给出这个 Retry-After 信息，那么客户端应当以处理500响应的方式处理它。 　　注意：503状态码的存在并不意味着服务器在过载的时候必须使用它。某些服务器只不过是希望拒绝客户端的连接。</td></tr><tr><td align="center">504</td><td align="center">作为网关或者代理工作的服务器尝试执行请求时，未能及时从上游服务器（URI标识出的服务器，例如HTTP、FTP、LDAP）或者辅助服务器（例如DNS）收到响应。 　　注意：某些代理服务器在DNS查询超时时会返回400或者500错误</td></tr><tr><td align="center">505</td><td align="center">服务器不支持，或者拒绝支持在请求中使用的 HTTP 版本。这暗示着服务器不能或不愿使用与客户端相同的版本。响应中应当包含一个描述了为何版本不被支持以及服务器支持哪些协议的实体。</td></tr><tr><td align="center">506</td><td align="center">由《透明内容协商协议》（RFC 2295）扩展，代表服务器存在内部配置错误：被请求的协商变元资源被配置为在透明内容协商中使用自己，因此在一个协商处理中不是一个合适的重点。</td></tr><tr><td align="center">507</td><td align="center">服务器无法存储完成请求所必须的内容。这个状况被认为是临时的。WebDAV (RFC 4918)</td></tr><tr><td align="center">509</td><td align="center">服务器达到带宽限制。这不是一个官方的状态码，但是仍被广泛使用。</td></tr><tr><td align="center">510</td><td align="center">获取资源所需要的策略并没有没满足。（RFC 2774）</td></tr></tbody></table><p><br/><br/></p><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/Japan/2.jpg" alt="post-cover"></p>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> WEB </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git设置代理</title>
      <link href="2020/12/16/Git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/"/>
      <url>2020/12/16/Git%E8%AE%BE%E7%BD%AE%E4%BB%A3%E7%90%86/</url>
      
        <content type="html"><![CDATA[<h4 id="很多时候我们在使用github的时候会出现下载很慢的情况，如果你使用代理-会提高下载和上传速度"><a href="#很多时候我们在使用github的时候会出现下载很慢的情况，如果你使用代理-会提高下载和上传速度" class="headerlink" title="很多时候我们在使用github的时候会出现下载很慢的情况，如果你使用代理,会提高下载和上传速度"></a>很多时候我们在使用github的时候会出现下载很慢的情况，如果你使用代理,会提高下载和上传速度</h4><blockquote><p>克隆 repo 的两种方式：https 和 ssh 方式</p></blockquote><blockquote><p>ssh 方式：git clone <a href="mailto:&#x67;&#x69;&#116;&#64;&#x67;&#x69;&#x74;&#x68;&#x75;&#98;&#46;&#x63;&#x6f;&#109;">&#x67;&#x69;&#116;&#64;&#x67;&#x69;&#x74;&#x68;&#x75;&#98;&#46;&#x63;&#x6f;&#109;</a>:xxx/git.git</p></blockquote><blockquote><p>https 方式：git clone <a href="https://github.com/xxx/git.git">https://github.com/xxx/git.git</a></p></blockquote><blockquote><blockquote><p>https 方式克隆的 repo，走 http 或 sock5 代理，任选一个</p></blockquote></blockquote><br/><h5 id="1-查看代理设置"><a href="#1-查看代理设置" class="headerlink" title="1.查看代理设置"></a>1.查看代理设置</h5><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git config –global http.proxy</p><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git config –global https.proxy</p><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git config –global -l</p><br/><h5 id="2-设置http-https全局代理"><a href="#2-设置http-https全局代理" class="headerlink" title="2.设置http/https全局代理"></a>2.设置http/https全局代理</h5><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git config –global http.proxy <a href="http://127.0.0.1:1087/">http://127.0.0.1:1087</a></p><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git config –global https.proxy <a href="http://127.0.0.1:1087/">http://127.0.0.1:1087</a></p><br/><h5 id="3-设置Socks5全局代理"><a href="#3-设置Socks5全局代理" class="headerlink" title="3.设置Socks5全局代理"></a>3.设置Socks5全局代理</h5><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git config –global http.proxy socks5://127.0.0.1:1080</p><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git config –global https.proxy socks5://127.0.0.1:1080</p><br/><h5 id="4-ssh-克隆方式的代理设置，直接在全局设置文件配置，即-ssh-config-文件"><a href="#4-ssh-克隆方式的代理设置，直接在全局设置文件配置，即-ssh-config-文件" class="headerlink" title="4.ssh 克隆方式的代理设置，直接在全局设置文件配置，即 ~/.ssh/config 文件"></a>4.ssh 克隆方式的代理设置，直接在全局设置文件配置，即 ~/.ssh/config 文件</h5><br/><pre><code>     HostName github.com      User git     \# 走 HTTP 代理，需要 brew install socat     \# ProxyCommand socat - PROXY:127.0.0.1:%h:%p,proxyport=1087     \# 走 socks5 代理（如 Shadow~socks）      ProxyCommand nc -v -x 127.0.0.1:1086 %h %p      \# 走 socks5 代理（如 Shadow~socks），Windows 平台没有 nc 命令      \# ProxyCommand connect -S 127.0.0.1:1086 %h %p </code></pre><br/><h5 id="5-删除全局代理"><a href="#5-删除全局代理" class="headerlink" title="5.删除全局代理"></a>5.删除全局代理</h5><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git config –global –unset http.pr&nbsp;oxy</p><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git config –global –unset https.proxy</p><br/><h5 id="6-个人代理服务器设置"><a href="#6-个人代理服务器设置" class="headerlink" title="6.个人代理服务器设置"></a>6.个人代理服务器设置</h5><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git config –global http.proxy <a href="http://proxyuser:proxypwd@proxy.server.com:port">http://proxyuser:proxypwd@proxy.server.com:port</a></p><br/><h5 id="7-只对github-com使用代理-其他仓库不走代理"><a href="#7-只对github-com使用代理-其他仓库不走代理" class="headerlink" title="7.只对github.com使用代理,其他仓库不走代理"></a>7.只对github.com使用代理,其他仓库不走代理</h5><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git config –global http.<a href="https://github.com.proxy/">https://github.com.proxy</a> socks5://127.0.0.1:1080</p><br/><h5 id="8-取消github代理"><a href="#8-取消github代理" class="headerlink" title="8.取消github代理"></a>8.取消github代理</h5><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;git config –global –unset http.<a href="https://github.com.proxy/">https://github.com.proxy</a></p><br/><br/><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/Japan/1.jpg" alt="post-cover"></p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux防火墙(设置)开启/关闭</title>
      <link href="2020/12/16/Linux%E9%98%B2%E7%81%AB%E5%A2%99-%E8%AE%BE%E7%BD%AE-%E5%BC%80%E5%90%AF-%E5%85%B3%E9%97%AD/"/>
      <url>2020/12/16/Linux%E9%98%B2%E7%81%AB%E5%A2%99-%E8%AE%BE%E7%BD%AE-%E5%BC%80%E5%90%AF-%E5%85%B3%E9%97%AD/</url>
      
        <content type="html"><![CDATA[<h4 id="在旧版本的CentOS中，是使用-iptables-命令来设置防火墙的。但是，从CentOS7开始，默认就没有安装iptables，而是改用firewall来配置防火墙。但iptalbes的一些命令仍然可以使用。-使用firewall-cmd命令添加规则-下面来说下firewall操作命令"><a href="#在旧版本的CentOS中，是使用-iptables-命令来设置防火墙的。但是，从CentOS7开始，默认就没有安装iptables，而是改用firewall来配置防火墙。但iptalbes的一些命令仍然可以使用。-使用firewall-cmd命令添加规则-下面来说下firewall操作命令" class="headerlink" title="在旧版本的CentOS中，是使用 iptables 命令来设置防火墙的。但是，从CentOS7开始，默认就没有安装iptables，而是改用firewall来配置防火墙。但iptalbes的一些命令仍然可以使用。 使用firewall-cmd命令添加规则,下面来说下firewall操作命令"></a><strong>在旧版本的CentOS中，是使用 iptables 命令来设置防火墙的。但是，从CentOS7开始，默认就没有安装iptables，而是改用firewall来配置防火墙。但iptalbes的一些命令仍然可以使用。 使用firewall-cmd命令添加规则,下面来说下firewall操作命令</strong></h4><br/><br/><h5 id="1-查看防火墙状态"><a href="#1-查看防火墙状态" class="headerlink" title="1.查看防火墙状态"></a><strong>1.查看防火墙状态</strong></h5><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;systemctrl status firewalld</p><br/><h5 id="2-关闭防火墙"><a href="#2-关闭防火墙" class="headerlink" title="2.关闭防火墙"></a><strong>2.关闭防火墙</strong></h5><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;systemctl stop firewalld</p><br/><h5 id="3-打开防火墙"><a href="#3-打开防火墙" class="headerlink" title="3.打开防火墙"></a><strong>3.打开防火墙</strong></h5><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;systemctl start firewalld</p><br/><h5 id="4-永久开放某个端口"><a href="#4-永久开放某个端口" class="headerlink" title="4.永久开放某个端口"></a><strong>4.永久开放某个端口</strong></h5><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firewall-cmd –zone=public –add-port=6379/tcp –permanent</p><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firewall-cmd –reload(重新载入)</p> <br/><h5 id="5-永久关闭某个端口"><a href="#5-永久关闭某个端口" class="headerlink" title="5.永久关闭某个端口"></a><strong>5.永久关闭某个端口</strong></h5><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firewall-cmd –remove-port=6379/tcp –permanent</p><br/><p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;firewall-cmd –reload(重新载入)</p><p><br/><br/></p><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/Japan/1.jpg" alt="post-cover"></p>]]></content>
      
      
      <categories>
          
          <category> code </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MarkDown简单使用</title>
      <link href="2020/12/15/MarkDown%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/"/>
      <url>2020/12/15/MarkDown%E7%AE%80%E5%8D%95%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/Japan/1.jpg" alt="post-cover"></p><h4 id="Markdown-是目前互联网上最流行的写作语言，它使用一些简单的符号（-gt-）来标记文本格式，其简洁的语法、优美的格式以及强大的软件支持深受广大网友的喜爱。一个样式可以有多种写法-Markdown同时也支持HTML标签写法-博主只按照自己的习惯列举的几个常用简单写法-不同编译器可能呈现不同的效果-下面以Typora编写效果展示"><a href="#Markdown-是目前互联网上最流行的写作语言，它使用一些简单的符号（-gt-）来标记文本格式，其简洁的语法、优美的格式以及强大的软件支持深受广大网友的喜爱。一个样式可以有多种写法-Markdown同时也支持HTML标签写法-博主只按照自己的习惯列举的几个常用简单写法-不同编译器可能呈现不同的效果-下面以Typora编写效果展示" class="headerlink" title="Markdown 是目前互联网上最流行的写作语言，它使用一些简单的符号（* / ` &gt; [] () #）来标记文本格式，其简洁的语法、优美的格式以及强大的软件支持深受广大网友的喜爱。一个样式可以有多种写法,Markdown同时也支持HTML标签写法,博主只按照自己的习惯列举的几个常用简单写法,不同编译器可能呈现不同的效果,下面以Typora编写效果展示"></a>Markdown 是目前互联网上最流行的写作语言，它使用一些简单的符号（* / ` &gt; [] () #）来标记文本格式，其简洁的语法、优美的格式以及强大的软件支持深受广大网友的喜爱。一个样式可以有多种写法,Markdown同时也支持HTML标签写法,博主只按照自己的习惯列举的几个常用简单写法,不同编译器可能呈现不同的效果,下面以Typora编写效果展示</h4><br/><h5 id="优点？"><a href="#优点？" class="headerlink" title="优点？"></a>优点？</h5><blockquote><p>专注你的文字内容而不是排版样式，安心写作。</p></blockquote><blockquote><p>轻松的导出HTML、PDF 和本身的.md 文件。</p></blockquote><blockquote><p>纯文本内容，兼容所有的文本编辑器与字处理软件。</p></blockquote><blockquote><p>随时修改你的文章版本，不必像字处理软件生成若干文件</p></blockquote><blockquote><p>版本导致混乱。可读、直观、学习成本低。</p></blockquote><br/><h5 id="基本用法"><a href="#基本用法" class="headerlink" title="基本用法"></a>基本用法</h5><br/><h5 id="1-标题"><a href="#1-标题" class="headerlink" title="1.标题"></a><strong>1.标题</strong></h5><pre><code>  # 一级标题  ## 二级标题  ### 三级标题  #### 四级级标题  ##### 五级标题  ###### 六级标题</code></pre><h5 id="效果"><a href="#效果" class="headerlink" title="效果:"></a>效果:</h5><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/content/markdown/1.png"></p><br/><h5 id="2-字体"><a href="#2-字体" class="headerlink" title="2.字体"></a><strong>2.字体</strong></h5><blockquote><p>斜体</p><blockquote><p>*斜体* </p></blockquote></blockquote><blockquote><p>粗体</p><blockquote><p>**粗体**</p></blockquote></blockquote><blockquote><p>粗斜体</p><blockquote><p>***粗斜体***</p></blockquote></blockquote><blockquote><p>删除线</p><blockquote><p>~~删除线~~</p></blockquote></blockquote><blockquote><p>下拉线</p><blockquote><p>&lt;u&gt;下划线&lt;/u&gt;</p></blockquote></blockquote><h5 id="效果-1"><a href="#效果-1" class="headerlink" title="效果:"></a>效果:</h5><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/content/markdown/2.png"></p><br/><h5 id="3-脚注"><a href="#3-脚注" class="headerlink" title="3.脚注"></a><strong>3.脚注</strong></h5><p>JAVA太难了,我想[^1]</p><p>[^1]:吃点糖</p><h5 id="效果-2"><a href="#效果-2" class="headerlink" title="效果:"></a>效果:</h5><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/content/markdown/3.png"></p><br/><h5 id="4-列表"><a href="#4-列表" class="headerlink" title="4.列表"></a><strong>4.列表</strong></h5><blockquote><p>无序列表</p><blockquote><p>* 第一项<br>* 第二项<br>* 第三项</p></blockquote></blockquote><blockquote><p>有序列表</p><blockquote><p>1.第一项<br>2.第二项<br>3.第三项</p></blockquote></blockquote><blockquote><p>列表嵌套</p><blockquote><ol><li>第一项<br>(四个空格) * 子项</li><li>第二项<br>(四个空格)* 子项</li></ol></blockquote></blockquote><h5 id="效果-3"><a href="#效果-3" class="headerlink" title="效果:"></a>效果:</h5><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/content/markdown/4.png"><br><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/content/markdown/5.png"><br><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/content/markdown/6.png"></p><br/><h5 id="4-图片和超链接"><a href="#4-图片和超链接" class="headerlink" title="4.图片和超链接"></a><strong>4.图片和超链接</strong></h5><blockquote><p>文字超链接</p></blockquote><blockquote><blockquote><p>这是[艾德蒙斯的博客](<a href="https://edmonds.cn/">https://edmonds.cn</a>)</p></blockquote></blockquote><blockquote><p>文字变量形式</p></blockquote><blockquote><blockquote><p>这是 艾德蒙斯的博客][Edmonds]<br>[Edmonds]: <a href="https://edmonds.cn/">https://edmonds.cn</a></p></blockquote></blockquote><blockquote><p>图片普通用法</p><blockquote><p>![SEO搜索用,可不写](<a href="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/55c66775e004e09321e8e30d20d94b73_1.jpg,&quot;%E6%82%AC%E6%B5%AE%E6%96%87%E5%AD%97&quot;">https://uploademonds.oss-cn-beijing.aliyuncs.com/image/55c66775e004e09321e8e30d20d94b73_1.jpg,&quot;悬浮文字&quot;</a>)</p></blockquote></blockquote><blockquote><p>图片变量形式</p><blockquote><p>这是艾德蒙斯的头像[head][edmonds]<br>[edmonds]:<a href="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/55c66775e004e09321e8e30d20d94b73_1.jpg">https://uploademonds.oss-cn-beijing.aliyuncs.com/image/55c66775e004e09321e8e30d20d94b73_1.jpg</a></p></blockquote></blockquote><h5 id="效果-4"><a href="#效果-4" class="headerlink" title="效果:"></a>效果:</h5><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/content/markdown/7.png"></p><br/><h5 id="5-表格"><a href="#5-表格" class="headerlink" title="5.表格"></a><strong>5.表格</strong></h5><p>| 左对齐 | 右对齐 | 居中 |<br>| :—–| —-: | :—-: |<br>| 单元格 | 单元格 | 单元格 |<br>| 单元格 | 单元格 | 单元格 |</p><h5 id="效果-5"><a href="#效果-5" class="headerlink" title="效果:"></a>效果:</h5><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/content/markdown/8.png"></p><br/><h5 id="6-代码块"><a href="#6-代码块" class="headerlink" title="6.代码块"></a><strong>6.代码块</strong></h5><p>1.两个`转为代码样式<br>  `public void  edmonds(){} `</p><p>2.代码区块使用 4 个空格或者一个制表符(Tab 键)<br>(四个空格)public void edmonds (){}</p><h5 id="效果-6"><a href="#效果-6" class="headerlink" title="效果:"></a>效果:</h5><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/content/markdown/9.png"></p><br/><h5 id="7-分割线"><a href="#7-分割线" class="headerlink" title="7.分割线"></a>7.<strong>分割线</strong></h5><p>***</p><p>* * *</p><p>*****</p><p>- - -</p><p>-———</p><h5 id="效果-7"><a href="#效果-7" class="headerlink" title="效果:"></a>效果:</h5><p><img src="https://uploademonds.oss-cn-beijing.aliyuncs.com/image/content/markdown/10.png"></p><br/><br/>]]></content>
      
      
      <categories>
          
          <category> tools </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MarkDown </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
